created: 20210303190555494
modified: 20210619034204087
tags: CAPE Writing [[Pure Content]]
title: From Indesign to Pure Content
tmap.id: d77e99f8-f930-4b8d-ad5e-1f171ad6f907
type: text/vnd.tiddlywiki
year: 2014

InDesign, Word, and various other all-in-one document/software types make it is hard to connect or anchor an addendum piece of content to the flow without actively inserting it somehow. Distinctions between an “introduction” paragraph and a regular paragraph become fuzzy. Paragraph styles for both might be the same in terms of aesthetics, however, semantically, or meta-data-wise, there might be need/desire for a difference. 

Let us say you have a designed book. All the editing, etc. for printing has already happened. However, now that content is locked into that usability space.

This is no different than using InDesign for writing. I think designers might often do this — it isn’t uncommon to directly design and write your syllabus in InDesign. Or perhaps, project sheets, etc.

Also, in terms of hierarchy within a syllabus, there are things like headlines, subheads, paragraphs, etc. that will all get paragraph stylings or perhaps character styles (to use InDesign vernacular). However, this isn’t quite as good as say styling with CSS which gives you different sorts of meta-data control, or the ability to say that the paragraph tags of class “lecture” do something different than paragraph tags of class “project” — though they are still paragraph tags… hmmm… I guess you can do this by just using different paragraph styles — but it isn't quite as intrinsically simple in inDesign or word as it is in CSS.

If you want paragraphs to look the same, but be different, or tagged, in terms of their different content, paragraph styles or similar aren’t really enough to do that…

Coding languages are much better equipped to handle things like this. Variables, Fields, File-types, etc.

Visual styling is concerned with hierarchy.
Content organizing is concerned with structure.

There is visual hierarchy and structural hierarchy.
We want to worry the most about the structural hierarchy. This is what will remain the same across all uses. The visual hierarchy we can allow to change as a function of the structural hierarchy and the use 

»»»»»»»»

Create Anywhere, Publish everywhere has some key concepts that must be understood.

Create Anywhere: This doesn’t mean with any software, or in any format unfortunately. This “Anywhere” means anything that is capable of outputting semi-structured, little-to-no-formatted text/content. However, there are ways of converting things like word docs, google docs, spreadsheets, etc. into better formatted options. This just takes 1 central repository/program that can pull in all various datas and datatypes and formats, and convert, splice, and format them in friendlier, more universal ways; as well as optimal formats for specific use cases (InDesign likes XML, most web things like JSON right now). Once data is in the central repository — or the CAPE framework — this can be accomplished fairly simply… The content can even then be “generated” to a pure form for future updates, etc. via best practices.