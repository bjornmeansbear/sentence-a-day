{
    "tiddlers": {
        "$:/plugins/OokTech/WordCount/EditWordCountTemplate": {
            "list-after": "$:/core/ui/EditTemplate/tags",
            "tags": "$:/tags/EditTemplate",
            "title": "$:/plugins/OokTech/WordCount/EditWordCountTemplate",
            "text": "<$reveal\n    type='nomatch'\n    state='$:/settings/OokTech/WordCount!!enable_edit_view'\n    text=false\n>\n    <$list\n        filter='[is[current]has[text]]'\n        emptyMessage=\"Word Count: 0\"\n    >\n        Word Count:\n        <$word-count\n            tiddler=<<currentTiddler>>\n            field='text'\n            mode=word\n        />\n    </$list>\n</$reveal>\n"
        },
        "$:/plugins/OokTech/WordCount/Acknowledgements": {
            "title": "$:/plugins/OokTech/WordCount/Acknowledgements",
            "text": " This plugin was created and is maintained by [[OokTech|$:/plugins/OokTech/OokTechInfo]].\n\n\n[[Tiddlywiki|http://TiddlyWiki.com]] was originally created by [[Jeremy Ruston|https://github.com/Jermolene/TiddlyWiki5]]. For general ~TiddlyWiki help see [[tiddlywiki.com|http://tiddlywiki.com]] or the [[google group|https://groups.google.com/forum/#!forum/tiddlywiki]].\n\nThank you to the general TiddlyWiki community for developing and maintaining the tiddlywiki core.\n"
        },
        "$:/plugins/OokTech/WordCount/License": {
            "title": "$:/plugins/OokTech/WordCount/License",
            "text": "BSD 3-Clause License\n\nCopyright (c) 2017, OokTech LLC\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\n* Neither the name of the copyright holder nor the names of its\n  contributors may be used to endorse or promote products derived from\n  this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        "$:/plugins/OokTech/OokTechInfo": {
            "title": "$:/plugins/OokTech/OokTechInfo",
            "text": "~OokTech is a small engineering company based in the USA with an international presence. We work on open software and hardware projects.\n\nWebsite: http://Ooktech.com<br>\n~GitHub: [[OokTech GitHub|https://github.com/OokTech]]\n\n\nTo add the OokTech plugin library to your wiki so you can install plugins from the control panel drag and drop [[this tiddler|$:/pluginlibrary/OokTech/OokTechPlugins]] into your wiki.\n"
        },
        "$:/pluginlibrary/OokTech/OokTechPlugins": {
            "title": "$:/pluginlibrary/OokTech/OokTechPlugins",
            "tags": "$:/tags/PluginLibrary",
            "url": "https://ooktech.com/TiddlyWiki/PluginLibrary",
            "text": "The plugin library for plugins developed and maintained by OokTech. See http://OokTech.com/TiddlyWiki for more information.\n"
        },
        "$:/plugins/OokTech/WordCount/readme": {
            "tags": "",
            "title": "$:/plugins/OokTech/WordCount/readme",
            "text": "This plugin contains the [[word-count widget|$:/plugins/OokTech/WordCount/WordCountControls]] and some templates that display the number of words in a tiddler. The value isn't updaded while you type, but if you pause for a moment it will update. You can make something that updates as you type but there are some severe performance penalties from that.\n\nTo use this just import the plugin into your wiki, save and restart. Settings are in the ~WordCount tab in the control panel. This tab is added as part of the plugin.\n\nSee [[Word Count Widget|$:/plugins/OokTech/WordCount/Word Count Widget]] for more documentation.\n\nLicense: [[BSD 3 Clause|$:/plugins/OokTech/WordCount/License]]\n\nCreator: [[OokTech|$:/plugins/OokTech/OokTechInfo]]\n\nSource: [[GitHub|https://https://github.com/OokTech/TW5-WordCount]]\n"
        },
        "$:/plugins/OokTech/WordCount/Word Count Widget": {
            "tags": "",
            "title": "$:/plugins/OokTech/WordCount/Word Count Widget",
            "text": "This is a widget that will display the number of words or characters in a tiddler or text string given to it.\n\nWidget tiddler: [[$:/plugins/OokTech/WordCount/word-count.js]]\n\nRemember you have to save and reload your wiki before the widget will work.\n\n|!Parameter |!Description |\n|mode |This can be set to `word` or `character` and will count either words or characters, defaults to `word` |\n|tiddler |The tiddler with the text to process (defauts to `currentTiddler`) |\n|field |The field with the text to process (defaults to the text field) |\n|text |A text string for the widget to count, if this is given it overrides the `tiddler` and `field` inputs. |\n|colors |(Optional) An input that sets text color when the count reaches a certain number. See the examples below. |\n|colorState |(Optional) The name of a state tiddler to use to store the current text color so it can be used to set the color of more than just the displayed number. |\n\n!!Usage\n\n!!!Count the number of words in a string:\n\n```\n<$word-count text='some text string'/>\n```\n\n<$word-count\n    text='some text string'\n/>\n\n!!!Count the number of characters in a string:\n\n```\n<$word-count text='some text string' mode=character/>\n```\n\n<$word-count\n    text='some text string'\n    mode=character\n/>\n\n!!!Count the number of words in a field:\n\n```\n<$word-count tiddler='Word Count Widget' field='title' mode=word/>\n```\n\n<$word-count\n    tiddler='Word Count Widget'\n    field='title'\n    mode=word\n/>\n\n!!!Using the colors parameter:\n\nThis uses the `colorState` tiddler.\n\n```\n<$word-count tiddler='$:/temp/Word Count Widget' mode=character colors='#f0f:10,indianred:100,red:122' colorState='$:/state/Word Count Widget/color'/>\n```\n\n<$word-count\n    tiddler='$:/temp/Word Count Widget'\n    mode=character\n    colors='#f0f:10,indianred:100,red:122'\n    colorState='$:/state/Word Count Widget/color'\n/>\n\nEdit the field here:\n<$edit-text\n    tiddler='$:/temp/Word Count Widget'\n    class='tc-edit-texteditor'\n/>\n\nContents of the color state tiddler:\n\n<$view\n    tiddler='$:/state/Word Count Widget/color'\n/>\n\n!!!Change colors of text as the number of characters in a field changes:\n\nAt the moment the input field loses focus every time the color changes.\n\n```\n<$word-count tiddler='$:/temp/Word Count Widget' mode=character colors='#f0f:10,indianred:100,red:122' colorState='$:/state/Word Count Widget/color'/>\n```\n\n<$word-count\n    tiddler='$:/temp/Word Count Widget'\n    mode=character\n    colors='#f0f:10,indianred:100,red:122'\n    colorState='$:/state/Word Count Widget/color'\n/>\n\nEdit the field here:\n<$set\n    name=CurrentColor\n    value={{$:/state/Word Count Widget/color}}\n>\n    <$edit-text\n        tiddler='$:/temp/Word Count Widget'\n        class='tc-edit-texteditor change-color'\n    />\n</$set>\n\nContents of the color state tiddler:\n\n<$view\n    tiddler='$:/state/Word Count Widget/color'\n/>\n"
        },
        "$:/plugins/OokTech/WordCount/WordCountControls": {
            "caption": "~WordCount",
            "tags": "$:/tags/ControlPanel",
            "title": "$:/plugins/OokTech/WordCount/WordCountControls",
            "text": "<$checkbox\n    tiddler='$:/settings/OokTech/WordCount'\n    field='enable_edit_view'\n    checked=true\n    unchecked=false\n    default=true\n>\n    Enable ~WordCount in edit mode\n</$checkbox>\n<br>\n<$checkbox\n    tiddler='$:/settings/OokTech/WordCount'\n    field='enable_view_mode'\n    checked=true\n    unchecked=false\n    default=false\n>\n    Enable ~WordCount in view mode\n</$checkbox>\n(This counts words in the raw text field, so wikitext that isn't visible in the view template is still counted. I may change this later.)\n"
        },
        "$:/plugins/OokTech/WordCount/WordCountViewTemplate": {
            "list-after": "$:/core/ui/ViewTemplate/tags",
            "tags": "$:/tags/ViewTemplate",
            "title": "$:/plugins/OokTech/WordCount/WordCountViewTemplate",
            "text": "<$reveal\n    type='match'\n    state='$:/settings/OokTech/WordCount!!enable_view_mode'\n    text=true\n>\n    <$list\n        filter='[is[current]has[text]]'\n        emptyMessage=\"Word Count: 0\"\n    >\n        Word Count:\n        <$word-count\n            tiddler=<<currentTiddler>>\n            field='text'\n            mode=word\n        />\n    </$list>\n</$reveal>\n"
        },
        "$:/widgets/OokTech/WordCount/word-count.js": {
            "text": "/*\\\ntitle: $:/widgets/OokTech/WordCount/word-count.js\ntype: application/javascript\nmodule-type: widget\n\nA widget to count the number of words or characters in a tiddlr/field/input string\n\nWith thanks to Skeeve for the original macro version this is based on\n\nDemo site:\n\nhttp://ooktech.com/jed/ExampleWikis/WordCount/\n\nUsage:\n\n<$word-count tiddler=SomeTiddler field=some_field mode=word/>\n<$word-count text=\"some text string\" mode=character/>\n<$word-count tiddler=SomeTiddler mode=character colors=\"blue:10,green:50,red:100\"/>\n\n\\*/\n(function(){\n\n/*jslint node: true, browser: true */\n/*global $tw: false */\n\"use strict\";\n\nvar Widget = require(\"$:/core/modules/widgets/widget.js\").widget;\n\nvar WordCount = function(parseTreeNode,options) {\n\tthis.initialise(parseTreeNode,options);\n};\n\n/*\nInherit from the base widget class\n*/\nWordCount.prototype = new Widget();\n\n/*\nRender this widget into the DOM\n*/\nWordCount.prototype.render = function(parent,nextSibling) {\n\tthis.parentDomNode = parent;\n\tthis.computeAttributes();\n\tthis.execute();\n\tvar textNode = this.document.createTextNode(this.currentCount);\n\tvar domNode = this.document.createElement(\"span\");\n\tparent.insertBefore(domNode,nextSibling);\n\tthis.renderChildren(domNode,null);\n\tthis.domNodes.push(domNode);\n};\n\n/*\nCompute the internal state of the widget\n*/\nWordCount.prototype.execute = function() {\n\tvar color_array = [];\n\tvar count_array = [];\n\tvar i;\n\n\t// Get parameters from our attributes\n\tthis.mode = this.getAttribute(\"mode\", \"word\");\n\tthis.tiddler = this.getAttribute(\"tiddler\",this.getVariable(\"currentTiddler\"));\n\tthis.field = this.getAttribute(\"field\",\"text\");\n\tthis.countText = this.getAttribute(\"text\");\n\tthis.colors = this.getAttribute(\"colors\");\n\tthis.stateTiddler = this.getAttribute(\"colorState\");\n\n\t//Find the color cut-offs, if any.\n\tif(this.colors) {\n\t\tvar color_array1 = this.colors.split(',');\n\t\tcolor_array1.sort(function sortfunction(a, b){\n\t\t\treturn a.split(':')[1] - b.split(':')[1];\n\t\t});\n\t\tfor(i = 0; i < color_array1.length; i++) {\n\t\t\tcolor_array[i] = color_array1[i].split(':')[0];\n\t\t\tcount_array[i] = color_array1[i].split(':')[1];\n\t\t}\n\t}\n\n\t// Count letters or words as appropriate.\n\tif(this.countText) {\n\t\tif(this.mode === \"character\") {\n\t\t\tthis.currentCount = this.countText.length.toString();\n\t\t} else {\n\t\t\tif (this.countText.match(/\\w+/g)) {\n\t\t\t\tthis.currentCount = this.countText.match(/\\w+/g).length.toString();\n\t\t\t}\n\t\t}\n\t} else {\n\t\tvar tiddler = this.wiki.getTiddler(this.tiddler);\n\t\tif(tiddler) {\n\t\t\tvar text = tiddler.getFieldString(this.field);\n\t\t\tif (text) {\n\t\t\t\tif(this.mode === \"word\") {\n\t\t\t\t\tif (text.match(/\\w+/g)) {\n\t\t\t\t\t\tthis.currentCount = text.match(/\\w+/g).length.toString();\n\t\t\t\t\t}\n\t\t\t\t} else if(this.mode === \"character\") {\n\t\t\t\t\tthis.currentCount = text.length.toString();\n\t\t\t\t} else {\n\t\t\t\t\tthis.currentCount = undefined;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.currentCount = undefined;\n\t\t\t}\n\t\t} else {\n\t\t\tthis.currentCount = undefined;\n\t\t}\n\t}\n\n\t//If this.currentCount is long enough set the color. It is the color with the largest value that is less than this.currentCount.\n\t//If no color has a large enough value do nothing.\n\tif(this.currentCount) {\n\t\tif(color_array) {\n\t\t\tfor(i = 0; i < color_array.length; i++) {\n\t\t\t\tif(Number(this.currentCount) > Number(count_array[color_array.length - 1 - i])) {\n\t\t\t\t\tif(this.stateTiddler) {\n\t\t\t\t\t\tthis.wiki.setText(this.stateTiddler,\"text\",undefined,color_array[color_array.length -1 - i]);\n\t\t\t\t\t}\n\t\t\t\t\tthis.currentCount = '@@color:' + color_array[color_array.length -1 - i] + ';' + this.currentCount + '@@';\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif(i === color_array.length-1) {\n\t\t\t\t\tthis.wiki.setText(this.stateTiddler,\"text\",undefined,'');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tvar parser = this.wiki.parseText(\"text/vnd.tiddlywiki\",this.currentCount,{parseAsInline: true});\n    var parseTreeNodes = parser ? parser.tree : [];\n\tthis.makeChildWidgets(parseTreeNodes);\n};\n\n/*\nSelectively refreshes the widget if needed. Returns true if the widget or any of its children needed re-rendering\n*/\nWordCount.prototype.refresh = function(changedTiddlers) {\n\t// Re-execute the filter to get the count\n\tthis.computeAttributes();\n\tvar oldCount = this.currentCount;\n\tthis.execute();\n\tif(this.currentCount !== oldCount) {\n\t\t// Regenerate and rerender the widget and replace the existing DOM node\n\t\tthis.refreshSelf();\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n\n};\n\nexports[\"word-count\"] = WordCount;\n\n})();\n",
            "title": "$:/widgets/OokTech/WordCount/word-count.js",
            "type": "application/javascript",
            "module-type": "widget"
        }
    }
}